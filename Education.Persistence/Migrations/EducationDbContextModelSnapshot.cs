// <auto-generated />
using System;
using Education.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Education.Persistence.Migrations
{
    [DbContext(typeof(EducationDbContext))]
    partial class EducationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Education.Domain.Curso", b =>
                {
                    b.Property<Guid>("CursoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasPrecision(14, 2)
                        .HasColumnType("decimal(14,2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CursoId");

                    b.ToTable("Cursos");

                    b.HasData(
                        new
                        {
                            CursoId = new Guid("c835c80e-a8bb-4555-8782-56cbc9bea182"),
                            Descripcion = "Curso de C# basico",
                            FechaCreacion = new DateTime(2022, 11, 19, 16, 2, 35, 96, DateTimeKind.Local).AddTicks(8102),
                            FechaPublicacion = new DateTime(2023, 11, 19, 16, 2, 35, 96, DateTimeKind.Local).AddTicks(8112),
                            Precio = 56000m,
                            Titulo = "C# Desde Cero"
                        },
                        new
                        {
                            CursoId = new Guid("95359d0e-5ca1-455c-bf8d-70bc314c737b"),
                            Descripcion = "Curso de Java",
                            FechaCreacion = new DateTime(2022, 11, 19, 16, 2, 35, 96, DateTimeKind.Local).AddTicks(8135),
                            FechaPublicacion = new DateTime(2023, 11, 19, 16, 2, 35, 96, DateTimeKind.Local).AddTicks(8135),
                            Precio = 25000m,
                            Titulo = "Master en Java Spring desde las raices"
                        },
                        new
                        {
                            CursoId = new Guid("e2906b7c-170c-49a8-be97-727ff151ec25"),
                            Descripcion = "Curso de Unit Tests para .NET Core",
                            FechaCreacion = new DateTime(2022, 11, 19, 16, 2, 35, 96, DateTimeKind.Local).AddTicks(8155),
                            FechaPublicacion = new DateTime(2023, 11, 19, 16, 2, 35, 96, DateTimeKind.Local).AddTicks(8156),
                            Precio = 75000m,
                            Titulo = "Master en Unit Tests con CQRS"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
